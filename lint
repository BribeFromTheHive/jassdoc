#!/usr/bin/env perl

use 5.30.0;

use strict;
use warnings;

use DBI;

my $dbh = DBI->connect('DBI:SQLite:jass.db');
my $stm = $dbh->prepare( 'SELECT 1 from annotations where fnname == ? limit 1' );

sub check_name {
    my $name = shift;
    $stm->execute( $name );
    print "Missing $name\n" unless $stm->fetchrow_array;
}


open(my $fh, "<", $ARGV[0]) or die;


my $state = "nothing";
my $src = "";
my $fn = "";
my $start = 0;
my $end = 0;

while (my $line = <$fh>){
    if($state eq "nothing" && $line =~ /^(?:constant\s+)?function\s+(\w+)/){
	$state = "function";
	$fn = $1;
	check_name $fn;
    }elsif($state eq "function" && $line =~ /^endfunction/){
	$state = "nothing";
    }elsif( $line =~ /^(?:constant\s+)?native\s+(\w+)/ && $state eq "nothing" ){
	$fn = $1;
	check_name $fn;
    }elsif ( $state eq "nothing" && $line =~ m/^\s*globals/){
	$state = "globals";
    }elsif( $state eq "globals" && $line =~ m/^\s*endglobals/){
	$state = "nothing";
    }elsif( $state eq "nothing" && $line =~ m/^type\s+(\w+)\s+extends\s+.+/){
	my $type = $1;
	check_name $type;
    }elsif ( $state eq "globals" ){
	my $name;
	given($line){
	    $name = $1 when /^\s*constant\s+\w+\s+(\w+)\s*=.+$/;
	    $name = $1 when /^\s*\w+\s+array\s+(\w+)/;
	    $name = $1 when /^\s*\w+\s+(\w+)/;
	}
	if($name){
	    check_name $name;

	}
    }
}

